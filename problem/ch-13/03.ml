(* (1) 多相型を受け取り、多相型を返すような関数 *)
(* f1: 'a -> 'a *)
let f1 a = a

(* (2) 多相型を 2 つ受け取り、第一引数と同じ型を返す関数 *)
(* f2: 'a -> 'b -> 'a *)
let f2 a b = a

(* (3) 多相型を 2 つ受け取り、第二引数と同じ型を返す関数 *)
(* f3: 'a -> 'b -> 'b *)
let f3 a b = b

(* (4) 多相型の変数と、多相関数を受け取り、第二引数で受け取った多相関数の返値と同じ型を返す関数 *)
(* f4: 'a -> ('a -> 'b) -> 'b *)
let f4 a f =
    let b = f a in b

(* (5) 多相関数 2 つと、多相型の変数 1 つを受け取り、第二引数で渡した多相関数の返値と同じ型を返す関数 *)
(* f5: ('a -> 'b) -> ('b -> 'c) -> 'a -> 'c *)
let f5 f f' a =
    let b = f a in
        let c = f' b in c
